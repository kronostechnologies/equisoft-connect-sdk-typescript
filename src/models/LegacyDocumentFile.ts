/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LegacyDocumentFile
 */
export interface LegacyDocumentFile {
    /**
     * id of the file
     * @type {string}
     * @memberof LegacyDocumentFile
     */
    id?: string;
    /**
     * File name
     * @type {string}
     * @memberof LegacyDocumentFile
     */
    fileName?: string;
    /**
     * Mime Type of the file
     * @type {string}
     * @memberof LegacyDocumentFile
     */
    mimeType?: string;
    /**
     * Size of the file(in bytes)
     * @type {string}
     * @memberof LegacyDocumentFile
     */
    sizeBytes?: string;
}

export function LegacyDocumentFileFromJSON(json: any): LegacyDocumentFile {
    return LegacyDocumentFileFromJSONTyped(json, false);
}

export function LegacyDocumentFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): LegacyDocumentFile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'mimeType': !exists(json, 'mimeType') ? undefined : json['mimeType'],
        'sizeBytes': !exists(json, 'sizeBytes') ? undefined : json['sizeBytes'],
    };
}

export function LegacyDocumentFileToJSON(value?: LegacyDocumentFile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fileName': value.fileName,
        'mimeType': value.mimeType,
        'sizeBytes': value.sizeBytes,
    };
}


