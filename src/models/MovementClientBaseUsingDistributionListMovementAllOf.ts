/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MovementDatabase,
    MovementDatabaseFromJSON,
    MovementDatabaseFromJSONTyped,
    MovementDatabaseToJSON,
    MovementDistributionList,
    MovementDistributionListFromJSON,
    MovementDistributionListFromJSONTyped,
    MovementDistributionListToJSON,
    MovementUser,
    MovementUserFromJSON,
    MovementUserFromJSONTyped,
    MovementUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface MovementClientBaseUsingDistributionListMovementAllOf
 */
export interface MovementClientBaseUsingDistributionListMovementAllOf {
    /**
     * 
     * @type {string}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    type: MovementClientBaseUsingDistributionListMovementAllOfTypeEnum;
    /**
     * 
     * @type {MovementDatabase}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    sourceDatabase: MovementDatabase;
    /**
     * 
     * @type {MovementUser}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    sourceUser: MovementUser;
    /**
     * 
     * @type {MovementDistributionList}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    sourceDistributionList?: MovementDistributionList;
    /**
     * 
     * @type {MovementDatabase}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    destinationDatabase: MovementDatabase;
    /**
     * 
     * @type {MovementUser}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    destinationUser: MovementUser;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    datagatewayAccessMappings?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof MovementClientBaseUsingDistributionListMovementAllOf
     */
    transferOption: string;
}

export function MovementClientBaseUsingDistributionListMovementAllOfFromJSON(json: any): MovementClientBaseUsingDistributionListMovementAllOf {
    return MovementClientBaseUsingDistributionListMovementAllOfFromJSONTyped(json, false);
}

export function MovementClientBaseUsingDistributionListMovementAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovementClientBaseUsingDistributionListMovementAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'sourceDatabase': MovementDatabaseFromJSON(json['sourceDatabase']),
        'sourceUser': MovementUserFromJSON(json['sourceUser']),
        'sourceDistributionList': !exists(json, 'sourceDistributionList') ? undefined : MovementDistributionListFromJSON(json['sourceDistributionList']),
        'destinationDatabase': MovementDatabaseFromJSON(json['destinationDatabase']),
        'destinationUser': MovementUserFromJSON(json['destinationUser']),
        'datagatewayAccessMappings': !exists(json, 'datagatewayAccessMappings') ? undefined : json['datagatewayAccessMappings'],
        'transferOption': json['transferOption'],
    };
}

export function MovementClientBaseUsingDistributionListMovementAllOfToJSON(value?: MovementClientBaseUsingDistributionListMovementAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'sourceDatabase': MovementDatabaseToJSON(value.sourceDatabase),
        'sourceUser': MovementUserToJSON(value.sourceUser),
        'sourceDistributionList': MovementDistributionListToJSON(value.sourceDistributionList),
        'destinationDatabase': MovementDatabaseToJSON(value.destinationDatabase),
        'destinationUser': MovementUserToJSON(value.destinationUser),
        'datagatewayAccessMappings': value.datagatewayAccessMappings,
        'transferOption': value.transferOption,
    };
}

/**
* @export
* @enum {string}
*/
export enum MovementClientBaseUsingDistributionListMovementAllOfTypeEnum {
    CLIENTBASE_USING_DISTLIST = 'CLIENTBASE_USING_DISTLIST'
}


