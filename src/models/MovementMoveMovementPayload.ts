/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MovementMoveMovementPayloadAllOf,
    MovementMoveMovementPayloadAllOfFromJSON,
    MovementMoveMovementPayloadAllOfFromJSONTyped,
    MovementMoveMovementPayloadAllOfToJSON,
    MovementMovementPayload,
    MovementMovementPayloadFromJSON,
    MovementMovementPayloadFromJSONTyped,
    MovementMovementPayloadToJSON,
} from './';

/**
 * 
 * @export
 * @interface MovementMoveMovementPayload
 */
export interface MovementMoveMovementPayload extends MovementMovementPayload {
    /**
     * 
     * @type {string}
     * @memberof MovementMoveMovementPayload
     */
    type: MovementMoveMovementPayloadTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MovementMoveMovementPayload
     */
    sourceDatabase: string;
    /**
     * 
     * @type {string}
     * @memberof MovementMoveMovementPayload
     */
    destinationDatabase: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovementMoveMovementPayload
     */
    users: Array<string>;
}

export function MovementMoveMovementPayloadFromJSON(json: any): MovementMoveMovementPayload {
    return MovementMoveMovementPayloadFromJSONTyped(json, false);
}

export function MovementMoveMovementPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovementMoveMovementPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...MovementMovementPayloadFromJSONTyped(json, ignoreDiscriminator),
        'type': json['type'],
        'sourceDatabase': json['sourceDatabase'],
        'destinationDatabase': json['destinationDatabase'],
        'users': json['users'],
    };
}

export function MovementMoveMovementPayloadToJSON(value?: MovementMoveMovementPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...MovementMovementPayloadToJSON(value),
        'type': value.type,
        'sourceDatabase': value.sourceDatabase,
        'destinationDatabase': value.destinationDatabase,
        'users': value.users,
    };
}

/**
* @export
* @enum {string}
*/
export enum MovementMoveMovementPayloadTypeEnum {
    MOVE = 'MOVE'
}


