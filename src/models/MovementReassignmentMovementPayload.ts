/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MovementMovementPayload,
    MovementMovementPayloadFromJSON,
    MovementMovementPayloadFromJSONTyped,
    MovementMovementPayloadToJSON,
    MovementReassignmentMovementPayloadAllOf,
    MovementReassignmentMovementPayloadAllOfFromJSON,
    MovementReassignmentMovementPayloadAllOfFromJSONTyped,
    MovementReassignmentMovementPayloadAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface MovementReassignmentMovementPayload
 */
export interface MovementReassignmentMovementPayload extends MovementMovementPayload {
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayload
     */
    type: MovementReassignmentMovementPayloadTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayload
     */
    sourceDatabase: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayload
     */
    sourceUser: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayload
     */
    destinationUser: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayload
     */
    accessCode: string;
}

export function MovementReassignmentMovementPayloadFromJSON(json: any): MovementReassignmentMovementPayload {
    return MovementReassignmentMovementPayloadFromJSONTyped(json, false);
}

export function MovementReassignmentMovementPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovementReassignmentMovementPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...MovementMovementPayloadFromJSONTyped(json, ignoreDiscriminator),
        'type': json['type'],
        'sourceDatabase': json['sourceDatabase'],
        'sourceUser': json['sourceUser'],
        'destinationUser': json['destinationUser'],
        'accessCode': json['accessCode'],
    };
}

export function MovementReassignmentMovementPayloadToJSON(value?: MovementReassignmentMovementPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...MovementMovementPayloadToJSON(value),
        'type': value.type,
        'sourceDatabase': value.sourceDatabase,
        'sourceUser': value.sourceUser,
        'destinationUser': value.destinationUser,
        'accessCode': value.accessCode,
    };
}

/**
* @export
* @enum {string}
*/
export enum MovementReassignmentMovementPayloadTypeEnum {
    REASSIGNMENT = 'REASSIGNMENT'
}


