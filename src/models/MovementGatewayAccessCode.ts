/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MovementGatewayAccessCode
 */
export interface MovementGatewayAccessCode {
    /**
     * 
     * @type {string}
     * @memberof MovementGatewayAccessCode
     */
    accessCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementGatewayAccessCode
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementGatewayAccessCode
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementGatewayAccessCode
     */
    system?: string;
}

export function MovementGatewayAccessCodeFromJSON(json: any): MovementGatewayAccessCode {
    return MovementGatewayAccessCodeFromJSONTyped(json, false);
}

export function MovementGatewayAccessCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovementGatewayAccessCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessCode': !exists(json, 'accessCode') ? undefined : json['accessCode'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'system': !exists(json, 'system') ? undefined : json['system'],
    };
}

export function MovementGatewayAccessCodeToJSON(value?: MovementGatewayAccessCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessCode': value.accessCode,
        'label': value.label,
        'code': value.code,
        'system': value.system,
    };
}


