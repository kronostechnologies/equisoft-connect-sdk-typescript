/* tslint:disable */
/* eslint-disable */
/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MovementUser,
    MovementUserFromJSON,
    MovementUserFromJSONTyped,
    MovementUserToJSON,
} from './';

import {
     MovementMoveMovementFromJSONTyped,
     MovementCopyMovementFromJSONTyped,
     MovementReassignmentMovementFromJSONTyped,
     MovementClientBaseUsingDistributionListMovementFromJSONTyped,
     MovementClientBaseUsingFileMovementFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface MovementMovement
 */
export interface MovementMovement {
    /**
     * 
     * @type {number}
     * @memberof MovementMovement
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    availableAction?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    scheduledDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    processedDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    addedDate?: string;
    /**
     * 
     * @type {MovementUser}
     * @memberof MovementMovement
     */
    addedBy?: MovementUser;
    /**
     * 
     * @type {string}
     * @memberof MovementMovement
     */
    cancelledDate?: string;
    /**
     * 
     * @type {MovementUser}
     * @memberof MovementMovement
     */
    cancelledBy?: MovementUser;
}

export function MovementMovementFromJSON(json: any): MovementMovement {
    return MovementMovementFromJSONTyped(json, false);
}

export function MovementMovementFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovementMovement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'MOVE') {
            return MovementMoveMovementFromJSONTyped(json, true);
        }
        if (json['type'] === 'COPY') {
            return MovementCopyMovementFromJSONTyped(json, true);
        }
        if (json['type'] === 'REASSIGNMENT') {
            return MovementReassignmentMovementFromJSONTyped(json, true);
        }
        if (json['type'] === 'CLIENTBASE_USING_DISTLIST') {
            return MovementClientBaseUsingDistributionListMovementFromJSONTyped(json, true);
        }
        if (json['type'] === 'CLIENTBASE_USING_FILE') {
            return MovementClientBaseUsingFileMovementFromJSONTyped(json, true);
        }
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'availableAction': !exists(json, 'availableAction') ? undefined : json['availableAction'],
        'scheduledDate': !exists(json, 'scheduledDate') ? undefined : json['scheduledDate'],
        'processedDate': !exists(json, 'processedDate') ? undefined : json['processedDate'],
        'addedDate': !exists(json, 'addedDate') ? undefined : json['addedDate'],
        'addedBy': !exists(json, 'addedBy') ? undefined : MovementUserFromJSON(json['addedBy']),
        'cancelledDate': !exists(json, 'cancelledDate') ? undefined : json['cancelledDate'],
        'cancelledBy': !exists(json, 'cancelledBy') ? undefined : MovementUserFromJSON(json['cancelledBy']),
    };
}

export function MovementMovementToJSON(value?: MovementMovement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'status': value.status,
        'availableAction': value.availableAction,
        'scheduledDate': value.scheduledDate,
        'processedDate': value.processedDate,
        'addedDate': value.addedDate,
        'addedBy': MovementUserToJSON(value.addedBy),
        'cancelledDate': value.cancelledDate,
        'cancelledBy': MovementUserToJSON(value.cancelledBy),
    };
}


