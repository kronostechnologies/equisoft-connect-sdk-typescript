/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface MovementReassignmentMovementPayloadAllOf
 */
export interface MovementReassignmentMovementPayloadAllOf {
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayloadAllOf
     */
    type: MovementReassignmentMovementPayloadAllOfTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayloadAllOf
     */
    sourceDatabase: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayloadAllOf
     */
    sourceUser: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayloadAllOf
     */
    destinationUser: string;
    /**
     * 
     * @type {string}
     * @memberof MovementReassignmentMovementPayloadAllOf
     */
    accessCode: string;
}

export function MovementReassignmentMovementPayloadAllOfFromJSON(json: any): MovementReassignmentMovementPayloadAllOf {
    return MovementReassignmentMovementPayloadAllOfFromJSONTyped(json, false);
}

export function MovementReassignmentMovementPayloadAllOfFromJSONTyped(json: any, _ignoreDiscriminator: boolean): MovementReassignmentMovementPayloadAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'sourceDatabase': json['sourceDatabase'],
        'sourceUser': json['sourceUser'],
        'destinationUser': json['destinationUser'],
        'accessCode': json['accessCode'],
    };
}

export function MovementReassignmentMovementPayloadAllOfToJSON(value?: MovementReassignmentMovementPayloadAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'sourceDatabase': value.sourceDatabase,
        'sourceUser': value.sourceUser,
        'destinationUser': value.destinationUser,
        'accessCode': value.accessCode,
    };
}

/**
* @export
* @enum {string}
*/
export enum MovementReassignmentMovementPayloadAllOfTypeEnum {
    REASSIGNMENT = 'REASSIGNMENT'
}


