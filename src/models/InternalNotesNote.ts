/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
    AccessRights,
    AccessRightsFromJSON,
    AccessRightsToJSON,
    InternalNotesAuthor,
    InternalNotesAuthorFromJSON,
    InternalNotesAuthorToJSON,
    InternalNotesNoteRevision,
    InternalNotesNoteRevisionFromJSON,
    InternalNotesNoteRevisionToJSON,
} from './';

/**
 * 
 * @export
 * @interface InternalNotesNote
 */
export interface InternalNotesNote {
    /**
     * Unique numerical identifier.
     * @type {number}
     * @memberof InternalNotesNote
     */
    id: number | null;
    /**
     * 
     * @type {Array<InternalNotesAuthor>}
     * @memberof InternalNotesNote
     */
    author: Array<InternalNotesAuthor> | null;
    /**
     * 
     * @type {Date}
     * @memberof InternalNotesNote
     */
    firstRevisionCreatedAt: Date | null;
    /**
     * 
     * @type {Array<AccessRights>}
     * @memberof InternalNotesNote
     */
    accessRights: Array<AccessRights> | null;
    /**
     * 
     * @type {Array<InternalNotesNoteRevision>}
     * @memberof InternalNotesNote
     */
    currentRevision: Array<InternalNotesNoteRevision> | null;
    /**
     * 
     * @type {Array<InternalNotesNoteRevision>}
     * @memberof InternalNotesNote
     */
    previousRevisions?: Array<InternalNotesNoteRevision> | null;
}

export function InternalNotesNoteFromJSON(json: any): InternalNotesNote {
    return InternalNotesNoteFromJSONTyped(json, false);
}

export function InternalNotesNoteFromJSONTyped(json: any, _ignoreDiscriminator: boolean): InternalNotesNote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'author': (json['author'] === null ? null : (json['author'] as Array<any>).map(InternalNotesAuthorFromJSON)),
        'firstRevisionCreatedAt': (json['firstRevisionCreatedAt'] === null ? null : new Date(json['firstRevisionCreatedAt'])),
        'accessRights': (json['accessRights'] === null ? null : (json['accessRights'] as Array<any>).map(AccessRightsFromJSON)),
        'currentRevision': (json['currentRevision'] === null ? null : (json['currentRevision'] as Array<any>).map(InternalNotesNoteRevisionFromJSON)),
        'previousRevisions': !exists(json, 'previousRevisions') ? undefined : (json['previousRevisions'] === null ? null : (json['previousRevisions'] as Array<any>).map(InternalNotesNoteRevisionFromJSON)),
    };
}

export function InternalNotesNoteToJSON(value?: InternalNotesNote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'author': (value.author === null ? null : (value.author as Array<any>).map(InternalNotesAuthorToJSON)),
        'firstRevisionCreatedAt': (value.firstRevisionCreatedAt === null ? null : value.firstRevisionCreatedAt.toISOString()),
        'accessRights': (value.accessRights === null ? null : (value.accessRights as Array<any>).map(AccessRightsToJSON)),
        'currentRevision': (value.currentRevision === null ? null : (value.currentRevision as Array<any>).map(InternalNotesNoteRevisionToJSON)),
        'previousRevisions': value.previousRevisions === undefined ? undefined : (value.previousRevisions === null ? null : (value.previousRevisions as Array<any>).map(InternalNotesNoteRevisionToJSON)),
    };
}


