/**
 * Equisoft /connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
    AccessRights,
    InternalNotesAuthor,
    InternalNotesNoteRevision,
} from './';

/**
 * 
 * @export
 * @interface InternalNotesNote
 */
export interface InternalNotesNote {
    /**
     * Unique numerical identifier.
     * @type {number}
     * @memberof InternalNotesNote
     */
    id: number | null;
    /**
     * 
     * @type {Array<InternalNotesAuthor>}
     * @memberof InternalNotesNote
     */
    author: Array<InternalNotesAuthor> | null;
    /**
     * 
     * @type {Date}
     * @memberof InternalNotesNote
     */
    firstRevisionCreatedAt: Date | null;
    /**
     * 
     * @type {Array<AccessRights>}
     * @memberof InternalNotesNote
     */
    accessRights: Array<AccessRights> | null;
    /**
     * 
     * @type {Array<InternalNotesNoteRevision>}
     * @memberof InternalNotesNote
     */
    currentRevision: Array<InternalNotesNoteRevision> | null;
    /**
     * 
     * @type {Array<InternalNotesNoteRevision>}
     * @memberof InternalNotesNote
     */
    previousRevisions?: Array<InternalNotesNoteRevision> | null;
}

export function InternalNotesNoteFromJSON(json: any): InternalNotesNote {
    return InternalNotesNoteFromJSONTyped(json, false);
}

export function InternalNotesNoteFromJSONTyped(json: any, _ignoreDiscriminator: boolean): InternalNotesNote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'author': Array&lt;InternalNotesAuthor&gt;FromJSON(json['author']),
        'firstRevisionCreatedAt': (json['firstRevisionCreatedAt'] === null ? null : new Date(json['firstRevisionCreatedAt'])),
        'accessRights': Array&lt;AccessRights&gt;FromJSON(json['accessRights']),
        'currentRevision': Array&lt;InternalNotesNoteRevision&gt;FromJSON(json['currentRevision']),
        'previousRevisions': !exists(json, 'previousRevisions') ? undefined : Array&lt;InternalNotesNoteRevision&gt;FromJSON(json['previousRevisions']),
    };
}

export function InternalNotesNoteToJSON(value?: InternalNotesNote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'author': Array&lt;InternalNotesAuthor&gt;ToJSON(value.author),
        'firstRevisionCreatedAt': (value.firstRevisionCreatedAt === null ? null : value.firstRevisionCreatedAt.toISOString()),
        'accessRights': Array&lt;AccessRights&gt;ToJSON(value.accessRights),
        'currentRevision': Array&lt;InternalNotesNoteRevision&gt;ToJSON(value.currentRevision),
        'previousRevisions': Array&lt;InternalNotesNoteRevision&gt;ToJSON(value.previousRevisions),
    };
}


